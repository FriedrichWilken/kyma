---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nats.fullname" . }}-config
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "nats.labels" . | nindent 4 }}
data:
  nats.conf: |
    # NATS Clients Port
    port: {{ .Values.nats.ports.client }}

    # PID file shared with configuration reloader.
    pid_file: "/var/run/nats/nats.pid"

    auth:
      enabled: true

      systemAccount: sa

      basic:
        accounts:
          sa:
            users:
              - user: sa
                pass: sa

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name: $POD_NAME

    {{- if .Values.global.jetstream.enabled }}
    ###################################
    #                                 #
    # NATS JetStream                  #
    #                                 #
    ###################################
    jetstream {
      {{- if .Values.nats.jetstream.encryption }}
      {{- if .Values.nats.jetstream.encryption.key }}
      key: {{ .Values.nats.jetstream.encryption.key | quote }}
      {{- else if .Values.nats.jetstream.encryption.secret }}
      key: $JS_KEY
      {{- end}}
      {{- end}}

      {{- if .Values.nats.jetstream.memStorage.enabled }}
      max_mem: {{ .Values.nats.jetstream.memStorage.size }}
      {{- end }}

      {{- if .Values.nats.jetstream.domain }}
      domain: {{ .Values.nats.jetstream.domain }}
      {{- end }}

      {{- if eq .Values.global.jetstream.storage "file" }}
      store_dir: {{ .Values.nats.jetstream.fileStorage.storageDirectory }}

      max_file:
      {{- if .Values.nats.jetstream.fileStorage.existingClaim }}
      {{- .Values.nats.jetstream.fileStorage.claimStorageSize  }}
      {{- else }}
      {{- .Values.nats.jetstream.fileStorage.size }}
      {{- end }}
      {{- end }}

      {{- if .Values.nats.jetstream.uniqueTag }}
      unique_tag: {{ .Values.nats.jetstream.uniqueTag }}
      {{- end }}
    }
    {{- end }}

    {{- if .Values.cluster.enabled }}
    ###################################
    #                                 #
    # NATS Full Mesh Clustering Setup #
    #                                 #
    ###################################
    cluster {
      port: 6222

      {{- if .Values.global.jetstream.enabled }}
      {{- if .Values.cluster.name }}
      name: {{ .Values.cluster.name }}
      {{- else }}
      name: {{ template "nats.name" . }}
      {{- end }}
      {{- else }}
      {{- with .Values.cluster.name }}
      name: {{ . }}
      {{- end }}
      {{- end }}

      routes = [
        {{ include "nats.clusterRoutes" . }}
      ]
      cluster_advertise: $CLUSTER_ADVERTISE

      {{- with .Values.cluster.noAdvertise }}
      no_advertise: {{ . }}
      {{- end }}

      connect_retries: {{ .Values.nats.connectRetries }}
    }
    {{- end }}

    {{- with .Values.nats.logging.debug }}
    debug: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.trace }}
    trace:  {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.logtime }}
    logtime: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.connectErrorReports }}
    connect_error_reports: {{ . }}
    {{- end }}

    {{- with .Values.nats.logging.reconnectErrorReports }}
    reconnect_error_reports: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxConnections }}
    max_connections: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxSubscriptions }}
    max_subscriptions: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxPending }}
    max_pending: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxControlLine }}
    max_control_line: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxPayload }}
    max_payload: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.pingInterval }}
    ping_interval: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.maxPings }}
    ping_max: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.writeDeadline }}
    write_deadline: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.lameDuckGracePeriod }}
    lame_duck_grace_period: {{ . }}
    {{- end }}

    {{- with .Values.nats.limits.lameDuckDuration }}
    lame_duck_duration: {{ . }}
    {{- end }}

    {{- if .Values.auth.enabled }}
    ##################
    #                #
    # Authorization  #
    #                #
    ##################
    {{- if .Values.auth.resolver }}
      {{- if eq .Values.auth.resolver.type "memory" }}
        resolver: MEMORY
        include "accounts/{{ .Values.auth.resolver.configMap.key }}"
      {{- end }}
      {{- if eq .Values.auth.resolver.type "full" }}
        {{- if .Values.auth.resolver.configMap }}
        include "accounts/{{ .Values.auth.resolver.configMap.key }}"
        {{- else }}
          {{- with .Values.auth.resolver }}
            {{- if $.Values.auth.timeout }}
            authorization {
              timeout: {{ $.Values.auth.timeout }}
            }
            {{- end }}
            {{- if .operator }}
            operator: {{ .operator }}
            {{- end }}
            {{- if .systemAccount }}
            system_account: {{ .systemAccount }}
            {{- end }}
          {{- end }}
          resolver: {
            type: full
            {{- with .Values.auth.resolver }}
            dir: {{ .store.dir | quote }}
            allow_delete: {{ .allowDelete }}
            interval: {{ .interval | quote }}
            {{- end }}
          }
        {{- end }}
      {{- end }}
      {{- if .Values.auth.resolver.resolverPreload }}
      resolver_preload: {{ toRawJson .Values.auth.resolver.resolverPreload }}
      {{- end }}
      {{- if eq .Values.auth.resolver.type "URL" }}
        {{- with .Values.auth.resolver.url }}
        resolver: URL({{ . }})
        {{- end }}
        operator: /etc/nats-config/operator/{{ .Values.auth.operatorjwt.configMap.key }}
      {{- end }}
    {{- end }}
    {{- with .Values.auth.systemAccount }}
    system_account: {{ . }}
    {{- end }}
    {{- with .Values.auth.token }}
    authorization {
      token: "{{ . }}"
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}
    }
    {{- end }}
    {{- with .Values.auth.nkeys }}
    {{- with .users }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}
      users: [
        {{- range . }}
        {{- toRawJson . | nindent 8 }},
        {{- end }}
      ]
    }
    {{- end }}
    {{- end }}
    {{- with .Values.auth.basic }}
    {{- with .noAuthUser }}
    no_auth_user: {{ . }}
    {{- end }}
    {{- if or .users (or .timeout .defaultPermissions) }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}
      {{- with .users }}
      users: [
        {{- range . }}
        {{- toRawJson . | nindent 8 }},
        {{- end }}
      ]
      {{- end }}
      {{- with $.Values.auth.basic.defaultPermissions }}
      default_permissions: {
        {{- if .publish }}
        publish: [
          {{- range .publish }}
          {{- toRawJson . | nindent 10 }},
          {{- end }}
        ],
        {{- end }}
        {{- if .subscribe }}
        subscribe: [
          {{- range .subscribe }}
          {{- toRawJson . | nindent 10 }},
          {{- end }}
        ],
        {{- end }}
      }
      {{- end }}
    }
    {{- end }}
    {{- with .accounts }}
    authorization {
      {{- if $.Values.auth.timeout }}
      timeout: {{ $.Values.auth.timeout }}
      {{- end }}
    }
    accounts: {{- toRawJson . }}
    {{- end }}
    {{- end }}
    {{- end }}
